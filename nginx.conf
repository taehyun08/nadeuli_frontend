# 포트 80로 들어오는 모든 요청에 대해 444코드 반환, 해당 요청 무시
server {
  listen 80 default_server;
  return 444;
  client_max_body_size 10000M;
}

# 포트 80에서 동작 nadeuli.kr 도메인 사용
# 모든 요청에 대해 HTTPS로 리디렉션(301)
# HTTP에서 HTTPS로 요청을 리디렉션하고 $server_name$request_uri를 통해 원래 요청 URL을 유지한 채로 HTTPS로 리디렉션
server {
  listen 80;
  server_name nadeuli.kr;
  client_max_body_size 10000M;

  location / {
        root    /build;
        # root    /app/build;
        index   index.html;
        try_files $uri $uri/ /index.html;
        return 301 https://$server_name$request_uri;
  }
  location /nadeuli/ {
    proxy_pass http://110.165.19.112:82;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
}

server {
  listen 443 ssl;
  server_name nadeuli.kr;
  client_max_body_size 10000M;

  ssl_certificate /etc/letsencrypt/archive/nadeuli.kr/fullchain1.pem;
  ssl_certificate_key /etc/letsencrypt/archive/nadeuli.kr/privkey1.pem;
  
location / {
    root    /build;
    # root    /app/build;
    index   index.html;
    try_files $uri $uri/ /index.html;

  # React 앱이 리버스 프록시에서 실행되는 경로에 맞게 수정
    # 예를 들어, /nadeuli 경로로 프록시된 경우, 아래와 같이 수정
    # rewrite ^/nadeuli(/.*)$ $1 break;
    # proxy_pass http://110.165.19.112:82;  # Spring 서버의 주소 (React 개발 서버 포트)
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection 'upgrade';
    # proxy_set_header Host $host;
    # proxy_cache_bypass $http_upgrade;
  }
location /nadeuli/ {
    proxy_pass http://default-nadeuliwas-76386-21756585-344eb94ee704.kr.lb.naverncp.com:82;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
}